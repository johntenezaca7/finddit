{"version":3,"sources":["redditAPI.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","e","preventDefault","value","querySelector","showMessage","output","results","forEach","image","post","preview","images","source","url","truncateText","title","selftext","subreddit","score","innerHTML","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortend","indexOf","substring"],"mappings":"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","file":"finddit.map","sourcesContent":["export default {\n    search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n            .then(res => res.json())\n            .then(data => data.data.children.map(data => \n                data.data ))\n            .catch(err => console.log(err));\n    }\n}","import reddit from './redditAPI';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\n\n//Form Event Listener\nsearchForm.addEventListener('submit', e => {\n    e.preventDefault();\n   \n    //Get search term\n    const searchTerm = searchInput.value;\n\n    //Get sort\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n    // Get Limit\n    const searchLimit = document.getElementById('limit').value;\n  \n    //Check Input\n\n    if(searchTerm === '') {\n        //Show message\n        showMessage('Please add a search term!', 'alert-danger')\n    }\n\n    //Clear input\n    searchInput.value = '';\n\n    //Search Reddit\n    reddit.search(searchTerm, searchLimit, sortBy)\n        .then(results => {\n            let output = '<div class=\"card-columns\">';\n            //Loop through posts\n\n            results.forEach(post => {\n                //Check for image;\n                const image = post.preview ? post.preview.images[0].source.url : 'https://marketingland.com/wp-content/ml-loads/2014/07/reddit-combo-1920-800x450.png';\n                output += `\n                <div class=\"card\" >\n                    <img class=\"card-img-top\" src=${image} alt=\"Card image cap\">\n                    <div class=\"card-body\">\n                    <h5 class=\"card-title\">${truncateText(post.title, 50)}...</h5>\n                    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n                    <a href=${post.url} target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n                    <hr>\n                    <span class=\"badge badge-secondary\"> Subreddit: ${post.subreddit} </span>\n                    <span class=\"badge badge-dark\"> Score: ${post.score} </span>\n                    </div>\n                </div>\n                `\n            })\n            output += '</div>';\n            document.getElementById('results').innerHTML = output;\n        })\n\n});\n\n//Show Message\n\nfunction showMessage(message, className) {\n    //create div\n    const div = document.createElement('div');\n    //Add classes\n    div.className = `alert ${className}`;\n    //Add text\n    div.appendChild(document.createTextNode(message));\n    //Get Parent \n    const searchContainer = document.getElementById('search-container');\n    //Get Search\n    const search = document.getElementById('search');\n\n    //Insert Message\n    searchContainer.insertBefore(div, search);\n    \n    //Timeout alert\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\n}\n//Truncate Text\n\nfunction truncateText(text, limit) {\n    const shortend = text.indexOf(' ', limit);\n\n    if(shortend == -1) return text;\n    return text.substring(0, shortend);\n}"]}